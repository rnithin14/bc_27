name: CI/CD

on:
  # Triggers the workflow on push or pull request events but only for the  branch
  push:
    branches: [master, deploy,]

env:
  DOCKER_CONTAINER_NAME: "green-commute"
  DOCKER_CONATINER_NAME_DB: "backend"
  GITHUB_PACKAGE_URL: https://ghcr.io
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}


jobs:

  backend:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' }}
    defaults:
      run:
        
        working-directory: backend

    steps:
      - name: checkout the repo
        uses: actions/checkout@v2

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 13.0.7
      - name: Build
        run: mvn -DskipTests=true package --file pom.xml

      - name: login to github packages
        run: docker login ${{ env.GITHUB_PACKAGE_URL }} -u ${{ secrets.REGISTRY_USERNAME }} --password ${{ secrets.REGISTRY_TOKEN }}

      - name: extract branch name
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - name: building image for backend
        run: docker build  -t backend:v1 .

      - name: display docker image name
        env:
          DOCKER_TAG_BASE_URL_DB: "ghcr.io/rnithin14/bootcamp_27_bd/bc27-green-backend-${{ steps.extract_branch.outputs.branch }}:${{ github.run_id }}"
        run: echo "${{ env.DOCKER_TAG_BASE_URL_DB }}"

      - name: taging image backend
        env:
          DOCKER_TAG_BASE_URL_DB: "ghcr.io/rnithin14/bootcamp_27_bd/bc27-green-backend-${{ steps.extract_branch.outputs.branch }}:${{ github.run_id }}"
        run: docker tag backend:v1  ${{ env.DOCKER_TAG_BASE_URL_DB }}

      - name: push image to github repo
        env:
          DOCKER_TAG_BASE_URL_DB: "ghcr.io/rnithin14/bootcamp_27_bd/bc27-green-backend-${{ steps.extract_branch.outputs.branch }}:${{ github.run_id }}"
        run: docker push ${{ env.DOCKER_TAG_BASE_URL_DB }}
 
  frontend:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' }}
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: checkout the repo
        uses: actions/checkout@v2

      - name: building image for frontend
        run: docker build -t green-commute:v1 .

      - name: login to github packages
        run: docker login ${{ env.GITHUB_PACKAGE_URL }} -u ${{ secrets.REGISTRY_USERNAME }} --password ${{ secrets.REGISTRY_TOKEN }}

      - name: extract branch name
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - name: display docker image name
        env:
          DOCKER_TAG_BASE_URL: "ghcr.io/rnithin14/bootcamp_27_bd/bc27-green-commute-${{ steps.extract_branch.outputs.branch }}:${{ github.run_id }}"
        run: echo "${{ env.DOCKER_TAG_BASE_URL }}"

      - name: taging image
        env:
          DOCKER_TAG_BASE_URL: "ghcr.io/rnithin14/bootcamp_27_bd/bc27-green-commute-${{ steps.extract_branch.outputs.branch }}:${{ github.run_id }}"
        run: docker tag green-commute:v1  ${{ env.DOCKER_TAG_BASE_URL }}
      # pushing images
      - name: push image to github repo
        env:
          DOCKER_TAG_BASE_URL: "ghcr.io/rnithin14/bootcamp_27_bd/bc27-green-commute-${{ steps.extract_branch.outputs.branch }}:${{ github.run_id }}"
        run: docker push ${{ env.DOCKER_TAG_BASE_URL }}

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs:
  #     - frontend
  #     - backend
  #   steps:
  #     - uses: actions/checkout@v2

  helm-lint:
    name: Helm lint and release
    runs-on: ubuntu-latest
    needs: 
      - frontend
      - backend
    steps:
     - uses: actions/checkout@v2
     - name: Helm Lint
       uses: WyriHaximus/github-action-helm3@v2
       with:
         exec: helm lint ./bc_27
     - name: Helm install
       uses: WyriHaximus/github-action-helm3@v2
       with:
         exec: helm upgrade --install v1 ./bc_27
         kubeconfig: '${{ secrets.KUBECONFIG }}'
